{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","Good","goods","map","good","SORTED_FIELD_ALPHA","SORTED_FIELD_LENGTH","App","useState","sortField","setSortField","isReversed","setIsReversed","visibleGoods","preparedGoods","sort","good1","good2","localeCompare","length","reverse","getGoods","className","type","cn","onClick","ReactDOM","render","document","getElementById"],"mappings":"iPAMaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAEWC,EAAO,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OAClB,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,SAMxBC,EAAqB,QACrBC,EAAsB,SA2BrB,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KAMMC,EAjCR,SAAkBX,EAAOO,EAAWE,GAClC,IAAMG,EAAa,YAAOZ,GAqB1B,OAnBIO,GACFK,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQR,GACN,KAAKJ,EACH,OAAOW,EAAME,cAAcD,GAE7B,KAAKX,EACH,OAAOU,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAKXR,GACFG,EAAcM,UAGTN,EAWcO,CAASrB,EAAiBS,EAAWE,GAE1D,OACE,sBAAKW,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,SAAU,UAAW,CACjC,WAAYf,IAAcJ,IAE5BoB,QAAS,WACPf,EAAaL,GACbO,GAAc,IAPlB,iCAaA,wBACEW,KAAK,SACLD,UAAWE,IAAG,SAAU,aAAc,CACpC,WAAYf,IAAcH,IAE5BmB,QAAS,WACPf,EAAaJ,GACbM,GAAc,IAPlB,4BAaA,wBACEW,KAAK,SACLD,UAAWE,IAAG,SAAU,aAAc,CACpC,YAAab,IAEfc,QAxCc,WACpBb,GAAeD,IAkCX,sBAUgB,KAAdF,GAAoBE,IACpB,wBACEY,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPf,EAAa,IACbE,GAAc,IALlB,sBAaJ,cAAC,EAAD,CAAMV,MAAOW,QCnHnBa,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.5d4aece3.chunk.js","sourcesContent":["import { useState } from 'react';\n\nimport cn from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\nexport const Good = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li data-cy=\"Good\" key={good}>\n        {good}\n      </li>\n    ))}\n  </ul>\n);\nconst SORTED_FIELD_ALPHA = 'alpha';\nconst SORTED_FIELD_LENGTH = 'length';\n\nfunction getGoods(goods, sortField, isReversed) {\n  const preparedGoods = [...goods];\n\n  if (sortField) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SORTED_FIELD_ALPHA:\n          return good1.localeCompare(good2);\n\n        case SORTED_FIELD_LENGTH:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [isReversed, setIsReversed] = useState(false);\n\n  const toggleReverse = () => {\n    setIsReversed(!isReversed);\n  };\n\n  const visibleGoods = getGoods(goodsFromServer, sortField, isReversed);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button', 'is-info', {\n            'is-light': sortField !== SORTED_FIELD_ALPHA,\n          })}\n          onClick={() => {\n            setSortField(SORTED_FIELD_ALPHA);\n            setIsReversed(false);\n          }}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-success', {\n            'is-light': sortField !== SORTED_FIELD_LENGTH,\n          })}\n          onClick={() => {\n            setSortField(SORTED_FIELD_LENGTH);\n            setIsReversed(false);\n          }}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-warning', {\n            'is-light': !isReversed,\n          })}\n          onClick={toggleReverse}\n        >\n          Reverse\n        </button>\n\n        {(sortField !== '' || isReversed) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setSortField('');\n              setIsReversed(false);\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <Good goods={visibleGoods} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}